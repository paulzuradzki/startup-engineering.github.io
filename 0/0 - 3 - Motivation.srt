
1
00:00:01,469 --> 00:00:08,069
So, let's talk about motivation for the class.
This is basically the class we wish we'd had

2
00:00:08,069 --> 00:00:13,830
when starting out. Startups are huge, and
you know, Stanford is the epicenter of Silicon

3
00:00:13,830 --> 00:00:17,000
Valley, but you don't actually learn how to
start up a company at Stanford. It's just

4
00:00:17,000 --> 00:00:21,599
something you sort of pick up by osmosis from
the people around you. And part of the reason

5
00:00:21,599 --> 00:00:25,779
for this is that academia, even though we
love it, teaches the details of black boxes,

6
00:00:25,779 --> 00:00:29,720
not how they fit together. It teaches how
to solve problems, but not necessarily what

7
00:00:29,720 --> 00:00:34,740
problems are valuable to solve. And you know
very very frequently we've seen this over

8
00:00:34,740 --> 00:00:40,200
and over again. First year grad students and
PhD programs and fresh graduates of undergrad

9
00:00:40,200 --> 00:00:45,520
computer science programs don't really know
how to ship production code. This is kind

10
00:00:45,520 --> 00:00:50,140
of an amusing graphic over here, and one of
the most interesting parts is "spoke to a

11
00:00:50,140 --> 00:00:53,660
developer friend and heard about software
testing for the first time". Now, you're going

12
00:00:53,660 --> 00:01:00,660
to hear about that before you get into your
PhD or your major project. Scaling a startup

13
00:01:01,130 --> 00:01:06,740
is a lot like scaling a research lab in the
following sense. You start hiring engineers

14
00:01:06,740 --> 00:01:13,500
once you start getting money and funding or
revenue, which is even better, but those new

15
00:01:13,500 --> 00:01:16,900
engineers weren't taught how to code in college,
so the first three months are spent training

16
00:01:16,900 --> 00:01:21,350
them while you're paying their student loans.
Scaling a research lab, very similar problem,

17
00:01:21,350 --> 00:01:24,830
except with first year grad students, and
the purpose of this class is to basically

18
00:01:24,830 --> 00:01:31,830
go upstream and, you know, communicate some
of these useful concepts upfront so that we

19
00:01:32,330 --> 00:01:37,299
can, you know, train these grad students who'd
otherwise coded for up to six years without

20
00:01:37,299 --> 00:01:42,580
knowing software engineering. It's going to
be a relatively challenging course. There's

21
00:01:42,580 --> 00:01:47,049
no speed limit in a startup. There's a lot
of Javascript related material, but there's

22
00:01:47,049 --> 00:01:51,460
no curve, and in theory, everyone can get
a grade of a hundred percent. So, that's kind

23
00:01:51,460 --> 00:01:54,780
of the motivations behind the course and we'd
love to have you involved.

